{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Quagga from 'quagga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = () => {\n  _s();\n  const [barcode, setBarcode] = useState(null);\n  const scannerRef = useRef(null);\n  useEffect(() => {\n    // Initialize Quagga\n    Quagga.init({\n      inputStream: {\n        type: 'LiveStream',\n        target: scannerRef.current,\n        constraints: {\n          facingMode: 'environment' // Use the back camera on mobile devices\n        }\n      },\n      decoder: {\n        readers: ['code_128_reader', 'ean_reader', 'ean_8_reader', 'code_39_reader']\n      }\n    }, err => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      console.log('Quagga is ready to start');\n      Quagga.start();\n    });\n\n    // Event listener for detected barcode\n    Quagga.onDetected(data => {\n      setBarcode(data.codeResult.code);\n      // Optionally stop scanning after detecting a barcode\n      console.log('Detected Barcode: ', data.codeResult.code);\n      Quagga.stop();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      Quagga.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Barcode Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scannerRef,\n      style: {\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), barcode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Detected Barcode: \", barcode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(BarcodeScanner, \"YY1EWoYHJASwOiOX2eTMLvOrW/o=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Quagga","jsxDEV","_jsxDEV","BarcodeScanner","_s","barcode","setBarcode","scannerRef","init","inputStream","type","target","current","constraints","facingMode","decoder","readers","err","console","error","log","start","onDetected","data","codeResult","code","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Quagga from 'quagga';\n\nconst BarcodeScanner = () => {\n  const [barcode, setBarcode] = useState(null);\n  const scannerRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Quagga\n    Quagga.init(\n      {\n        inputStream: {\n          type: 'LiveStream',\n          target: scannerRef.current,\n          constraints: {\n            facingMode: 'environment' // Use the back camera on mobile devices\n          },\n        },\n        decoder: {\n          readers: ['code_128_reader', 'ean_reader', 'ean_8_reader', 'code_39_reader'],\n        },\n      },\n      (err) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        console.log('Quagga is ready to start');\n        Quagga.start();\n      }\n    );\n\n    // Event listener for detected barcode\n    Quagga.onDetected((data) => {\n      setBarcode(data.codeResult.code);\n      // Optionally stop scanning after detecting a barcode\n      console.log('Detected Barcode: ', data.codeResult.code);\n      Quagga.stop();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      Quagga.stop();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Barcode Scanner</h2>\n      <div ref={scannerRef} style={{ width: '100%', height: '400px' }}></div>\n      {barcode && <p>Detected Barcode: {barcode}</p>}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMQ,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd;IACAG,MAAM,CAACQ,IAAI,CACT;MACEC,WAAW,EAAE;QACXC,IAAI,EAAE,YAAY;QAClBC,MAAM,EAAEJ,UAAU,CAACK,OAAO;QAC1BC,WAAW,EAAE;UACXC,UAAU,EAAE,aAAa,CAAC;QAC5B;MACF,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE,CAAC,iBAAiB,EAAE,YAAY,EAAE,cAAc,EAAE,gBAAgB;MAC7E;IACF,CAAC,EACAC,GAAG,IAAK;MACP,IAAIA,GAAG,EAAE;QACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClB;MACF;MACAC,OAAO,CAACE,GAAG,CAAC,0BAA0B,CAAC;MACvCpB,MAAM,CAACqB,KAAK,CAAC,CAAC;IAChB,CACF,CAAC;;IAED;IACArB,MAAM,CAACsB,UAAU,CAAEC,IAAI,IAAK;MAC1BjB,UAAU,CAACiB,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC;MAChC;MACAP,OAAO,CAACE,GAAG,CAAC,oBAAoB,EAAEG,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC;MACvDzB,MAAM,CAAC0B,IAAI,CAAC,CAAC;IACf,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX1B,MAAM,CAAC0B,IAAI,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAK8B,GAAG,EAAEzB,UAAW;MAAC0B,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACtE1B,OAAO,iBAAIH,OAAA;MAAAyB,QAAA,GAAG,oBAAkB,EAACtB,OAAO;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlDID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAoDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}