{"ast":null,"code":"'use strict';\n\nconst {\n  validSlog,\n  validKodaNamena,\n  validLength,\n  validIBAN,\n  required,\n  formatAmount,\n  formatBool,\n  formatDate,\n  parseAmount,\n  parseBool,\n  parseDate\n} = require('./util');\n\nclass UPNQRError extends Error {\n  constructor(msg) {\n    super();\n    this.name = 'UPNQRError';\n    this.message = msg;\n  }\n\n}\n\nconst items = [{\n  name: 'slog',\n  filterIn: [validSlog]\n}, {\n  name: 'IBAN_placnika',\n  filterIn: [validIBAN]\n}, {\n  name: 'polog',\n  filterIn: [parseBool],\n  filterOut: [formatBool]\n}, {\n  name: 'dvig',\n  filterIn: [parseBool],\n  filterOut: [formatBool]\n}, {\n  name: 'referenca_placnika',\n  filterIn: [validLength(26)]\n}, {\n  name: 'ime_placnika',\n  filterIn: [validLength(33)]\n}, {\n  name: 'ulica_placnika',\n  filterIn: [validLength(33)]\n}, {\n  name: 'kraj_placnika',\n  filterIn: [validLength(33)]\n}, {\n  name: 'znesek',\n  filterIn: [required, validLength(11), parseAmount],\n  filterOut: [formatAmount]\n}, {\n  name: 'datum_placila',\n  filterIn: [parseDate]\n}, {\n  name: 'nujno',\n  filterIn: [parseBool],\n  filterOut: [formatBool]\n}, {\n  name: 'koda_namena',\n  filterIn: [validKodaNamena]\n}, {\n  name: 'namen_placila'\n}, {\n  name: 'rok_placila',\n  filterIn: [parseDate],\n  filterOut: [formatDate]\n}, {\n  name: 'IBAN_prejemnika',\n  filterIn: [required, validIBAN]\n}, {\n  name: 'referenca_prejemnika'\n}, {\n  name: 'ime_prejemnika'\n}, {\n  name: 'ulica_prejemnika'\n}, {\n  name: 'kraj_prejemnika'\n}, {\n  name: 'vsota',\n  filterIn: [required, parseFloat]\n}, {\n  name: 'rezerva'\n}];\n\nfunction encode(upn) {\n  if (!('slog' in upn)) upn.slog = 'UPNQR';\n  let sum = 0;\n  return items.map((item, i) => {\n    const val = applyFilters(upn[item.name] || '', item && item.filterOut, item.name);\n    if (i < 19) sum += val.length;else if (item.name === 'vsota') return sum + 19;\n    return val;\n  }).join('\\n');\n}\n\nfunction decode(code) {\n  if (code.length > 411) throw new UPNQRError('Code is too long');\n  let sum = 0;\n  const upn = code.split('\\n').reduce((agg, val, i) => {\n    const item = items[i];\n    if (i < 19) sum += val.length + 1;\n    val = applyFilters(val, item && item.filterIn, item.name);\n    if (val !== '') agg[item.name] = val;\n    return agg;\n  }, {});\n  if (sum !== upn.vsota) throw new UPNQRError(`Invalid checksum. Expected ${upn.vsota}, got ${sum}`);\n  return upn;\n}\n\nfunction applyFilters(val, filters, name) {\n  if (filters) val = filters.reduce((v, filter) => filter(v, name), val);\n  return val;\n}\n\nmodule.exports = {\n  encode,\n  decode,\n  UPNQRError\n};","map":{"version":3,"sources":["C:/Users/ethan/Documents/stormhacks-2024/scanecipe/node_modules/upnqr/lib/upnqr.js"],"names":["validSlog","validKodaNamena","validLength","validIBAN","required","formatAmount","formatBool","formatDate","parseAmount","parseBool","parseDate","require","UPNQRError","Error","constructor","msg","name","message","items","filterIn","filterOut","parseFloat","encode","upn","slog","sum","map","item","i","val","applyFilters","length","join","decode","code","split","reduce","agg","vsota","filters","v","filter","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst {\n  validSlog, validKodaNamena, validLength, validIBAN, required,\n  formatAmount, formatBool, formatDate, parseAmount, parseBool, parseDate\n} = require('./util')\n\nclass UPNQRError extends Error {\n  constructor (msg) {\n    super()\n    this.name = 'UPNQRError'\n    this.message = msg\n  }\n}\n\nconst items = [\n  { name: 'slog', filterIn: [validSlog] },\n  { name: 'IBAN_placnika', filterIn: [validIBAN] },\n  { name: 'polog', filterIn: [parseBool], filterOut: [formatBool] },\n  { name: 'dvig', filterIn: [parseBool], filterOut: [formatBool] },\n  { name: 'referenca_placnika', filterIn: [validLength(26)] },\n  { name: 'ime_placnika', filterIn: [validLength(33)] },\n  { name: 'ulica_placnika', filterIn: [validLength(33)] },\n  { name: 'kraj_placnika', filterIn: [validLength(33)] },\n  { name: 'znesek', filterIn: [required, validLength(11), parseAmount], filterOut: [formatAmount] },\n  { name: 'datum_placila', filterIn: [parseDate] },\n  { name: 'nujno', filterIn: [parseBool], filterOut: [formatBool] },\n  { name: 'koda_namena', filterIn: [validKodaNamena] },\n  { name: 'namen_placila' },\n  { name: 'rok_placila', filterIn: [parseDate], filterOut: [formatDate] },\n  { name: 'IBAN_prejemnika', filterIn: [required, validIBAN] },\n  { name: 'referenca_prejemnika' },\n  { name: 'ime_prejemnika' },\n  { name: 'ulica_prejemnika' },\n  { name: 'kraj_prejemnika' },\n  { name: 'vsota', filterIn: [required, parseFloat] },\n  { name: 'rezerva' }\n]\n\nfunction encode (upn) {\n  if (!('slog' in upn)) upn.slog = 'UPNQR'\n  let sum = 0\n  return items.map((item, i) => {\n    const val = applyFilters(upn[item.name] || '', item && item.filterOut, item.name)\n    if (i < 19) sum += val.length\n    else if (item.name === 'vsota') return sum + 19\n    return val\n  }).join('\\n')\n}\n\nfunction decode (code) {\n  if (code.length > 411) throw new UPNQRError('Code is too long')\n  let sum = 0\n  const upn = code.split('\\n').reduce((agg, val, i) => {\n    const item = items[i]\n    if (i < 19) sum += val.length + 1\n    val = applyFilters(val, item && item.filterIn, item.name)\n    if (val !== '') agg[item.name] = val\n    return agg\n  }, {})\n  if (sum !== upn.vsota) throw new UPNQRError(`Invalid checksum. Expected ${upn.vsota}, got ${sum}`)\n  return upn\n}\n\nfunction applyFilters (val, filters, name) {\n  if (filters) val = filters.reduce((v, filter) => filter(v, name), val)\n  return val\n}\n\nmodule.exports = {\n  encode, decode, UPNQRError\n}\n"]},"metadata":{},"sourceType":"script"}