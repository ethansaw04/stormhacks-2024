{"ast":null,"code":"import CreateKoder from './zbar.js';\nclass Koder {\n  get initialized() {\n    return (async () => {\n      // Load WASM file\n      console.log(\"ESM\");\n      this.mod = await CreateKoder();\n\n      // Initialize a glue API object (between JavaScript and C++ code)\n      this.api = {\n        createBuffer: this.mod.cwrap('createBuffer', 'number', ['number']),\n        deleteBuffer: this.mod.cwrap('deleteBuffer', '', ['number']),\n        triggerDecode: this.mod.cwrap('triggerDecode', 'number', ['number', 'number', 'number']),\n        getScanResults: this.mod.cwrap('getScanResults', 'number', [])\n      };\n\n      // return the class\n      return this;\n    })();\n  }\n  decode(imgData, width, height) {\n    const buffer = this.api.createBuffer(width * height * 4);\n    this.mod.HEAPU8.set(imgData, buffer);\n    const results = [];\n    if (this.api.triggerDecode(buffer, width, height) > 0) {\n      const resultAddress = this.api.getScanResults();\n      results.push(this.mod.UTF8ToString(resultAddress));\n      this.api.deleteBuffer(resultAddress);\n    }\n    if (results.length > 0) return results[0];else return null;\n  }\n}\nexport default Koder;","map":{"version":3,"names":["CreateKoder","Koder","initialized","console","log","mod","api","createBuffer","cwrap","deleteBuffer","triggerDecode","getScanResults","decode","imgData","width","height","buffer","HEAPU8","set","results","resultAddress","push","UTF8ToString","length"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/node_modules/@maslick/koder/index.mjs"],"sourcesContent":["import CreateKoder from './zbar.js';\n\nclass Koder {\n  get initialized() {\n    return (async () => {\n      // Load WASM file\n      console.log(\"ESM\");\n      this.mod = await CreateKoder();\n\n      // Initialize a glue API object (between JavaScript and C++ code)\n      this.api = {\n        createBuffer: this.mod.cwrap('createBuffer', 'number', ['number']),\n        deleteBuffer: this.mod.cwrap('deleteBuffer', '', ['number']),\n        triggerDecode: this.mod.cwrap('triggerDecode', 'number', ['number', 'number', 'number']),\n        getScanResults: this.mod.cwrap('getScanResults', 'number', [])\n      };\n\n      // return the class\n      return this;\n    })();\n  }\n\n  decode(imgData, width, height) {\n    const buffer = this.api.createBuffer(width * height * 4);\n    this.mod.HEAPU8.set(imgData, buffer);\n    const results = [];\n    if (this.api.triggerDecode(buffer, width, height) > 0) {\n      const resultAddress = this.api.getScanResults();\n      results.push(this.mod.UTF8ToString(resultAddress));\n      this.api.deleteBuffer(resultAddress);\n    }\n    if (results.length > 0) return results[0];\n    else return null;\n  }\n}\n\nexport default Koder;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,WAAW;AAEnC,MAAMC,KAAK,CAAC;EACV,IAAIC,WAAWA,CAAA,EAAG;IAChB,OAAO,CAAC,YAAY;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,IAAI,CAACC,GAAG,GAAG,MAAML,WAAW,CAAC,CAAC;;MAE9B;MACA,IAAI,CAACM,GAAG,GAAG;QACTC,YAAY,EAAE,IAAI,CAACF,GAAG,CAACG,KAAK,CAAC,cAAc,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;QAClEC,YAAY,EAAE,IAAI,CAACJ,GAAG,CAACG,KAAK,CAAC,cAAc,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC5DE,aAAa,EAAE,IAAI,CAACL,GAAG,CAACG,KAAK,CAAC,eAAe,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACxFG,cAAc,EAAE,IAAI,CAACN,GAAG,CAACG,KAAK,CAAC,gBAAgB,EAAE,QAAQ,EAAE,EAAE;MAC/D,CAAC;;MAED;MACA,OAAO,IAAI;IACb,CAAC,EAAE,CAAC;EACN;EAEAI,MAAMA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAC7B,MAAMC,MAAM,GAAG,IAAI,CAACV,GAAG,CAACC,YAAY,CAACO,KAAK,GAAGC,MAAM,GAAG,CAAC,CAAC;IACxD,IAAI,CAACV,GAAG,CAACY,MAAM,CAACC,GAAG,CAACL,OAAO,EAAEG,MAAM,CAAC;IACpC,MAAMG,OAAO,GAAG,EAAE;IAClB,IAAI,IAAI,CAACb,GAAG,CAACI,aAAa,CAACM,MAAM,EAAEF,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC,EAAE;MACrD,MAAMK,aAAa,GAAG,IAAI,CAACd,GAAG,CAACK,cAAc,CAAC,CAAC;MAC/CQ,OAAO,CAACE,IAAI,CAAC,IAAI,CAAChB,GAAG,CAACiB,YAAY,CAACF,aAAa,CAAC,CAAC;MAClD,IAAI,CAACd,GAAG,CAACG,YAAY,CAACW,aAAa,CAAC;IACtC;IACA,IAAID,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE,OAAOJ,OAAO,CAAC,CAAC,CAAC,CAAC,KACrC,OAAO,IAAI;EAClB;AACF;AAEA,eAAelB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}