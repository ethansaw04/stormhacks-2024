{"ast":null,"code":"const charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\nconst divmod = (x, y) => [Math.floor(x / y), x % y];\n\n// Encode a buffer (or uint8array) to base45-encoded string\nconst encode = buffer => {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n  let res = '';\n  for (let i = 0; i < buffer.length; i = i + 2) {\n    if (buffer.length - i > 1) {\n      const x = (buffer[i] << 8) + buffer[i + 1];\n      const [e, rest] = divmod(x, 45 * 45);\n      const [d, c] = divmod(rest, 45);\n      res += charset[c] + charset[d] + charset[e];\n    } else {\n      const [d, c] = divmod(buffer[i], 45);\n      res += charset[c] + charset[d];\n    }\n  }\n  return res;\n};\n\n// Decode base45-encoded input\nconst decode = input => {\n  const buffer = Array.from(input).map(c => charset.indexOf(c));\n  const res = [];\n  for (let i = 0; i < buffer.length; i = i + 3) {\n    if (buffer.length - i >= 3) {\n      const x = buffer[i] + buffer[i + 1] * 45 + buffer[i + 2] * 45 * 45;\n      res.push(...divmod(x, 256));\n    } else {\n      const x = buffer[i] + buffer[i + 1] * 45;\n      res.push(x);\n    }\n  }\n  return Buffer.from(res);\n};\nmodule.exports = {\n  encode,\n  decode\n};","map":{"version":3,"names":["charset","divmod","x","y","Math","floor","encode","buffer","Buffer","from","res","i","length","e","rest","d","c","decode","input","Array","map","indexOf","push","module","exports"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/node_modules/base45/lib/base45.js"],"sourcesContent":["const charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:'\nconst divmod = (x, y) => [Math.floor(x / y), x % y]\n\n// Encode a buffer (or uint8array) to base45-encoded string\nconst encode = (buffer) => {\n  if (typeof (buffer) === 'string') buffer = Buffer.from(buffer)\n  let res = ''\n  for (let i = 0; i < buffer.length; i = i + 2) {\n    if (buffer.length - i > 1) {\n      const x = (buffer[i] << 8) + buffer[i + 1]\n      const [e, rest] = divmod(x, 45 * 45)\n      const [d, c] = divmod(rest, 45)\n      res += charset[c] + charset[d] + charset[e]\n    } else {\n      const [d, c] = divmod(buffer[i], 45)\n      res += charset[c] + charset[d]\n    }\n  }\n  return res\n}\n\n// Decode base45-encoded input\nconst decode = (input) => {\n  const buffer = Array.from(input).map(c => charset.indexOf(c))\n  const res = []\n  for (let i = 0; i < buffer.length; i = i + 3) {\n    if (buffer.length - i >= 3) {\n      const x = buffer[i] + buffer[i + 1] * 45 + buffer[i + 2] * 45 * 45\n      res.push(...divmod(x, 256))\n    } else {\n      const x = buffer[i] + buffer[i + 1] * 45\n      res.push(x)\n    }\n  }\n  return Buffer.from(res)\n}\n\nmodule.exports = {\n  encode,\n  decode\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+CAA+C;AAC/D,MAAMC,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACC,IAAI,CAACC,KAAK,CAACH,CAAC,GAAGC,CAAC,CAAC,EAAED,CAAC,GAAGC,CAAC,CAAC;;AAEnD;AACA,MAAMG,MAAM,GAAIC,MAAM,IAAK;EACzB,IAAI,OAAQA,MAAO,KAAK,QAAQ,EAAEA,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC;EAC9D,IAAIG,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;IAC5C,IAAIJ,MAAM,CAACK,MAAM,GAAGD,CAAC,GAAG,CAAC,EAAE;MACzB,MAAMT,CAAC,GAAG,CAACK,MAAM,CAACI,CAAC,CAAC,IAAI,CAAC,IAAIJ,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC;MAC1C,MAAM,CAACE,CAAC,EAAEC,IAAI,CAAC,GAAGb,MAAM,CAACC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC;MACpC,MAAM,CAACa,CAAC,EAAEC,CAAC,CAAC,GAAGf,MAAM,CAACa,IAAI,EAAE,EAAE,CAAC;MAC/BJ,GAAG,IAAIV,OAAO,CAACgB,CAAC,CAAC,GAAGhB,OAAO,CAACe,CAAC,CAAC,GAAGf,OAAO,CAACa,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,MAAM,CAACE,CAAC,EAAEC,CAAC,CAAC,GAAGf,MAAM,CAACM,MAAM,CAACI,CAAC,CAAC,EAAE,EAAE,CAAC;MACpCD,GAAG,IAAIV,OAAO,CAACgB,CAAC,CAAC,GAAGhB,OAAO,CAACe,CAAC,CAAC;IAChC;EACF;EACA,OAAOL,GAAG;AACZ,CAAC;;AAED;AACA,MAAMO,MAAM,GAAIC,KAAK,IAAK;EACxB,MAAMX,MAAM,GAAGY,KAAK,CAACV,IAAI,CAACS,KAAK,CAAC,CAACE,GAAG,CAACJ,CAAC,IAAIhB,OAAO,CAACqB,OAAO,CAACL,CAAC,CAAC,CAAC;EAC7D,MAAMN,GAAG,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;IAC5C,IAAIJ,MAAM,CAACK,MAAM,GAAGD,CAAC,IAAI,CAAC,EAAE;MAC1B,MAAMT,CAAC,GAAGK,MAAM,CAACI,CAAC,CAAC,GAAGJ,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAGJ,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;MAClED,GAAG,CAACY,IAAI,CAAC,GAAGrB,MAAM,CAACC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,MAAM;MACL,MAAMA,CAAC,GAAGK,MAAM,CAACI,CAAC,CAAC,GAAGJ,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;MACxCD,GAAG,CAACY,IAAI,CAACpB,CAAC,CAAC;IACb;EACF;EACA,OAAOM,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;AACzB,CAAC;AAEDa,MAAM,CAACC,OAAO,GAAG;EACflB,MAAM;EACNW;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}