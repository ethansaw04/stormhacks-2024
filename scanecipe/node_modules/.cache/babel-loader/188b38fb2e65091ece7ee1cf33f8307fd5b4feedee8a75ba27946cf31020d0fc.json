{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { BrowserMultiFormatReader, NotFoundException } from '@zxing/library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [scannedData, setScannedData] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    codeReader.listVideoInputDevices().then(videoInputDevices => {\n      const selectedDeviceId = videoInputDevices[0].deviceId; // Use the first device\n\n      // Start the video stream\n      codeReader.decodeFromVideoDevice(selectedDeviceId, videoRef.current, (result, err) => {\n        if (result) {\n          setScannedData(result.text); // Store the scanned data\n          setError('');\n        }\n        if (err && !(err instanceof NotFoundException)) {\n          console.error(err);\n          setError('Error scanning the barcode');\n        }\n      });\n    }).catch(err => {\n      console.error(err);\n      setError('Error accessing camera');\n    });\n\n    // Cleanup function to stop scanning when the component unmounts\n    return () => {\n      codeReader.reset();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Barcode Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%',\n        maxWidth: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Scanned Data: \", scannedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(BarcodeScanner, \"NlKU01RoxwaCs/k4NWIwy5V62DI=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","BrowserMultiFormatReader","NotFoundException","jsxDEV","_jsxDEV","BarcodeScanner","_s","videoRef","scannedData","setScannedData","error","setError","codeReader","listVideoInputDevices","then","videoInputDevices","selectedDeviceId","deviceId","decodeFromVideoDevice","current","result","err","text","console","catch","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","maxWidth","color","_c","$RefreshReg$"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { BrowserMultiFormatReader, NotFoundException  } from '@zxing/library';\n\nconst BarcodeScanner = () => {\n  const videoRef = useRef(null);\n  const [scannedData, setScannedData] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    codeReader\n      .listVideoInputDevices()\n      .then((videoInputDevices) => {\n        const selectedDeviceId = videoInputDevices[0].deviceId; // Use the first device\n\n        // Start the video stream\n        codeReader.decodeFromVideoDevice(selectedDeviceId, videoRef.current, (result, err) => {\n          if (result) {\n            setScannedData(result.text); // Store the scanned data\n            setError('');\n          }\n          if (err && !(err instanceof NotFoundException)) {\n            console.error(err);\n            setError('Error scanning the barcode');\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        setError('Error accessing camera');\n      });\n\n    // Cleanup function to stop scanning when the component unmounts\n    return () => {\n      codeReader.reset();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Barcode Scanner</h1>\n      <video ref={videoRef} style={{ width: '100%', maxWidth: '600px' }} />\n      {scannedData && <h2>Scanned Data: {scannedData}</h2>}\n      {error && <h2 style={{ color: 'red' }}>{error}</h2>}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,wBAAwB,EAAEC,iBAAiB,QAAS,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,IAAIX,wBAAwB,CAAC,CAAC;IACjDW,UAAU,CACPC,qBAAqB,CAAC,CAAC,CACvBC,IAAI,CAAEC,iBAAiB,IAAK;MAC3B,MAAMC,gBAAgB,GAAGD,iBAAiB,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;;MAExD;MACAL,UAAU,CAACM,qBAAqB,CAACF,gBAAgB,EAAET,QAAQ,CAACY,OAAO,EAAE,CAACC,MAAM,EAAEC,GAAG,KAAK;QACpF,IAAID,MAAM,EAAE;UACVX,cAAc,CAACW,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;UAC7BX,QAAQ,CAAC,EAAE,CAAC;QACd;QACA,IAAIU,GAAG,IAAI,EAAEA,GAAG,YAAYnB,iBAAiB,CAAC,EAAE;UAC9CqB,OAAO,CAACb,KAAK,CAACW,GAAG,CAAC;UAClBV,QAAQ,CAAC,4BAA4B,CAAC;QACxC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,CACDa,KAAK,CAAEH,GAAG,IAAK;MACdE,OAAO,CAACb,KAAK,CAACW,GAAG,CAAC;MAClBV,QAAQ,CAAC,wBAAwB,CAAC;IACpC,CAAC,CAAC;;IAEJ;IACA,OAAO,MAAM;MACXC,UAAU,CAACa,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA;MAAO2B,GAAG,EAAExB,QAAS;MAACyB,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpEtB,WAAW,iBAAIJ,OAAA;MAAAsB,QAAA,GAAI,gBAAc,EAAClB,WAAW;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnDpB,KAAK,iBAAIN,OAAA;MAAI4B,KAAK,EAAE;QAAEG,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3CID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}