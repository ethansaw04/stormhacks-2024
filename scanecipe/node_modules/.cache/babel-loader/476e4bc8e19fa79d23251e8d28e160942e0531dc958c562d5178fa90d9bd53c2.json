{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js\",\n  _s = $RefreshSig$();\n// src/BarcodeScanner.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Quagga from 'quagga';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = () => {\n  _s();\n  const [barcode, setBarcode] = useState(null);\n  const scannerRef = useRef(null);\n  useEffect(() => {\n    // Initialize Quagga\n    Quagga.init({\n      inputStream: {\n        type: 'LiveStream',\n        target: scannerRef.current,\n        constraints: {\n          facingMode: 'environment' // Use the back camera on mobile devices\n        },\n        // Apply CSS for mirroring the camera feed\n        area: {\n          // Defines where to scan\n          top: \"0%\",\n          // top offset\n          right: \"0%\",\n          // right offset\n          left: \"0%\",\n          // left offset\n          bottom: \"0%\" // bottom offset\n        }\n      },\n      decoder: {\n        readers: ['code_128_reader', 'ean_reader', 'ean_8_reader', 'code_39_reader']\n      }\n    }, err => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      console.log('Quagga is ready to start');\n      Quagga.start();\n    });\n\n    // Event listener for detected barcode\n    Quagga.onDetected(data => {\n      setBarcode(data.codeResult.code); // Set the detected barcode\n      console.log('Detected Barcode:', data.codeResult.code); // Log to console\n      // Optionally stop scanning after detecting a barcode\n      Quagga.stop();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      Quagga.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Barcode Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scannerRef,\n      style: {\n        width: '100%',\n        height: '400px',\n        transform: 'scale(-1, 1)',\n        // Mirror effect\n        overflow: 'hidden' // Hide any overflow\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), barcode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        border: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detected Barcode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        children: barcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBarcode(null),\n        children: \"Scan Another\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BarcodeScanner, \"YY1EWoYHJASwOiOX2eTMLvOrW/o=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Quagga","jsxDEV","_jsxDEV","BarcodeScanner","_s","barcode","setBarcode","scannerRef","init","inputStream","type","target","current","constraints","facingMode","area","top","right","left","bottom","decoder","readers","err","console","error","log","start","onDetected","data","codeResult","code","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","transform","overflow","marginTop","padding","border","fontSize","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js"],"sourcesContent":["// src/BarcodeScanner.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Quagga from 'quagga';\n\nconst BarcodeScanner = () => {\n  const [barcode, setBarcode] = useState(null);\n  const scannerRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Quagga\n    Quagga.init(\n      {\n        inputStream: {\n          type: 'LiveStream',\n          target: scannerRef.current,\n          constraints: {\n            facingMode: 'environment', // Use the back camera on mobile devices\n          },\n          // Apply CSS for mirroring the camera feed\n          area: { // Defines where to scan\n            top: \"0%\",    // top offset\n            right: \"0%\",  // right offset\n            left: \"0%\",   // left offset\n            bottom: \"0%\"  // bottom offset\n          },\n        },\n        decoder: {\n          readers: ['code_128_reader', 'ean_reader', 'ean_8_reader', 'code_39_reader'],\n        },\n      },\n      (err) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        console.log('Quagga is ready to start');\n        Quagga.start();\n      }\n    );\n\n    // Event listener for detected barcode\n    Quagga.onDetected((data) => {\n      setBarcode(data.codeResult.code); // Set the detected barcode\n      console.log('Detected Barcode:', data.codeResult.code); // Log to console\n      // Optionally stop scanning after detecting a barcode\n      Quagga.stop();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      Quagga.stop();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Barcode Scanner</h2>\n      <div\n        ref={scannerRef}\n        style={{\n          width: '100%',\n          height: '400px',\n          transform: 'scale(-1, 1)', // Mirror effect\n          overflow: 'hidden', // Hide any overflow\n        }}\n      ></div>\n      {barcode && (\n        <div style={{ marginTop: '20px', padding: '10px', border: '1px solid #ccc' }}>\n          <h3>Detected Barcode:</h3>\n          <p style={{ fontSize: '24px', fontWeight: 'bold' }}>{barcode}</p>\n          <button onClick={() => setBarcode(null)}>Scan Another</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}