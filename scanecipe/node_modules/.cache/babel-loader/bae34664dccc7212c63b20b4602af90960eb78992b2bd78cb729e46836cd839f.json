{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = () => {\n  _s();\n  const [result, setResult] = useState('No result');\n  const [error, setError] = useState('');\n  const handleScan = data => {\n    if (data) {\n      setResult(data);\n      setError(''); // Clear any previous errors\n    }\n  };\n  const handleError = err => {\n    setError(err.message);\n    console.error(err);\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(result).then(() => {\n      alert('Scanned data copied to clipboard!');\n    }).catch(err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Barcode Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '100%',\n        maxWidth: '400px',\n        margin: 'auto'\n      },\n      facingMode: \"environment\" // Use the back camera on mobile devices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scanned Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), result !== 'No result' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        children: \"Copy to Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(BarcodeScanner, \"Dpjm5hT1W4Iz2KmQGCBsgELBGT8=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","BarcodeScanner","_s","result","setResult","error","setError","handleScan","data","handleError","err","message","console","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onError","onScan","width","maxWidth","margin","facingMode","onClick","color","_c","$RefreshReg$"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\n\nconst BarcodeScanner = () => {\n    const [result, setResult] = useState('No result');\n    const [error, setError] = useState('');\n\n    const handleScan = (data) => {\n        if (data) {\n            setResult(data);\n            setError(''); // Clear any previous errors\n        }\n    };\n\n    const handleError = (err) => {\n        setError(err.message);\n        console.error(err);\n    };\n\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(result)\n            .then(() => {\n                alert('Scanned data copied to clipboard!');\n            })\n            .catch((err) => {\n                console.error('Could not copy text: ', err);\n            });\n    };\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n            <h1>Barcode Scanner</h1>\n            <QrReader\n                onError={handleError}\n                onScan={handleScan}\n                style={{ width: '100%', maxWidth: '400px', margin: 'auto' }}\n                facingMode=\"environment\" // Use the back camera on mobile devices\n            />\n            <div style={{ marginTop: '20px' }}>\n                <p><strong>Scanned Data:</strong> {result}</p>\n                {result !== 'No result' && (\n                    <button onClick={copyToClipboard}>\n                        Copy to Clipboard\n                    </button>\n                )}\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default BarcodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}