{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js\",\n  _s = $RefreshSig$();\n// src/BarcodeScanner.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Koder from '@maslick/koder'; // Ensure correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarcodeScanner = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [scannedData, setScannedData] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const koder = new Koder();\n    const initCamera = async () => {\n      try {\n        const videoStream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment' // Use the rear camera\n          }\n        });\n        videoRef.current.srcObject = videoStream;\n        videoRef.current.play();\n        const detectBarcode = async () => {\n          try {\n            // Wait until the video is ready\n            await new Promise(resolve => {\n              videoRef.current.onloadedmetadata = resolve;\n            });\n\n            // Scan the video stream\n            const result = await koder.scan(videoRef.current);\n            if (result) {\n              setScannedData(result.data); // Store the scanned data\n              setError('');\n            }\n            requestAnimationFrame(detectBarcode); // Continue scanning\n          } catch (err) {\n            console.error(err);\n            setError('Error decoding the barcode');\n          }\n        };\n        detectBarcode(); // Start scanning\n      } catch (err) {\n        console.error(err);\n        setError('Error accessing camera');\n      }\n    };\n    initCamera();\n    return () => {\n      // Cleanup when the component unmounts\n      if (videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Barcode Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '100%',\n        maxWidth: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Scanned Data: \", scannedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(BarcodeScanner, \"NlKU01RoxwaCs/k4NWIwy5V62DI=\");\n_c = BarcodeScanner;\nexport default BarcodeScanner;\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanner\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Koder","jsxDEV","_jsxDEV","BarcodeScanner","_s","videoRef","scannedData","setScannedData","error","setError","koder","initCamera","videoStream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","play","detectBarcode","Promise","resolve","onloadedmetadata","result","scan","data","requestAnimationFrame","err","console","stream","tracks","getTracks","forEach","track","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","maxWidth","color","_c","$RefreshReg$"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/BarcodeScanner.js"],"sourcesContent":["// src/BarcodeScanner.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Koder from '@maslick/koder'; // Ensure correct import\n\nconst BarcodeScanner = () => {\n  const videoRef = useRef(null);\n  const [scannedData, setScannedData] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const koder = new Koder();\n\n    const initCamera = async () => {\n      try {\n        const videoStream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment', // Use the rear camera\n          },\n        });\n\n        videoRef.current.srcObject = videoStream;\n        videoRef.current.play();\n\n        const detectBarcode = async () => {\n          try {\n            // Wait until the video is ready\n            await new Promise((resolve) => {\n              videoRef.current.onloadedmetadata = resolve;\n            });\n\n            // Scan the video stream\n            const result = await koder.scan(videoRef.current);\n            if (result) {\n              setScannedData(result.data); // Store the scanned data\n              setError('');\n            }\n\n            requestAnimationFrame(detectBarcode); // Continue scanning\n          } catch (err) {\n            console.error(err);\n            setError('Error decoding the barcode');\n          }\n        };\n\n        detectBarcode(); // Start scanning\n      } catch (err) {\n        console.error(err);\n        setError('Error accessing camera');\n      }\n    };\n\n    initCamera();\n\n    return () => {\n      // Cleanup when the component unmounts\n      if (videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach((track) => track.stop());\n        videoRef.current.srcObject = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Barcode Scanner</h1>\n      <video ref={videoRef} style={{ width: '100%', maxWidth: '600px' }} />\n      {scannedData && <h2>Scanned Data: {scannedData}</h2>}\n      {error && <h2 style={{ color: 'red' }}>{error}</h2>}\n    </div>\n  );\n};\n\nexport default BarcodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}