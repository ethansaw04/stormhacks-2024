{"ast":null,"code":"var _jsxFileName = \"/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/components/scan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useState from 'react-usestateref';\nimport { beep as beepNow, WORKER_TYPE } from \"../helpers\";\nimport { CODE_TYPE } from \"../transformers/base\";\nimport { Upnqr } from \"../transformers/upnqr\";\nimport { Covid19 } from \"../transformers/covid19\";\nimport \"../css/scan.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BTN_TXT = {\n  START: \"START\",\n  STOP: \"STOP\"\n};\nconst CANVAS_SIZE = {\n  WIDTH: 320,\n  HEIGHT: 430\n};\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\nconst sw = CANVAS_SIZE.WIDTH;\nconst sh = CANVAS_SIZE.HEIGHT;\nconst dw = sw;\nconst dh = sh;\nconst dx = 0;\nconst dy = 0;\nlet sx = 0;\nlet sy = 0;\nconst crossHairSvg = \"M77.125 148.02567c0-3.5774 2.73862-6.27567 6.37076-6.27567H119V117H84.0192C66.50812 117 52 130.77595 52 148.02567V183h25.125v-34.97433zM237.37338 117H202v24.75h35.18494c3.63161 0 6.69006 2.69775 6.69006 6.27567V183H269v-34.97433C269 130.77595 254.88446 117 237.37338 117zM243.875 285.4587c0 3.5774-2.73863 6.27567-6.37076 6.27567H202V317h35.50424C255.01532 317 269 302.70842 269 285.4587V251h-25.125v34.4587zM83.49576 291.73438c-3.63213 0-6.37076-2.69776-6.37076-6.27568V251H52v34.4587C52 302.70842 66.50812 317 84.0192 317H119v-25.26563H83.49576z\";\nconst crossHairWidth = 217,\n      crossHairHeight = 200,\n      x0 = 53,\n      y0 = 117;\nexport default function Scan(_ref) {\n  _s();\n\n  let {\n    beep = true,\n    decode = true,\n    worker = WORKER_TYPE.WASM,\n    scanRate = 250,\n    bw = false,\n    crosshair = true,\n    upnqr = false,\n    covid19 = false\n  } = _ref;\n  // Component state\n  const [btnText, setBtnText] = useState(BTN_TXT.START);\n  const [scanning, setScanning] = useState(false);\n  const [bwOn, setBwOn, bwRef] = useState(bw);\n  const [crosshairOn, setCrosshairOn, crosshairRef] = useState(crosshair);\n  const [resultOpen, setResultOpen] = useState(false);\n  const [transformToggle, setTransformToggle] = useState(true);\n  const [rawCode, setRawCode] = useState();\n  const [codeType, setCodeType] = useState();\n  const [beepOn, setBeepOn] = useState(beep);\n  const [video] = useState(document.createElement(\"video\"));\n  const [barcode, setBarcode] = useState();\n  const [milliseconds, setMilliseconds] = useState(); // Constants\n\n  let qrworker = null;\n  let canvasElement = null;\n  let canvas = null;\n  let oldTime = 0;\n\n  video.onplaying = () => {\n    sx = (video.videoWidth - CANVAS_SIZE.WIDTH) / 2;\n    sy = (video.videoHeight - CANVAS_SIZE.HEIGHT) / 2;\n  };\n\n  const initWorker = () => {\n    qrworker = new Worker(worker + \"Worker.js\");\n\n    qrworker.onmessage = async ev => {\n      if (ev.data != null) {\n        qrworker.terminate();\n        const result = ev.data;\n        await stopScan();\n        let res = result.data;\n        const millis = ev.data.ms;\n        const rawCode = res;\n        let codeType = CODE_TYPE.RAW; // Transform raw to UPNQR\n\n        if (upnqr) {\n          const transformer = new Upnqr();\n\n          if (transformer.identified(res)) {\n            codeType = transformer.codeType();\n            res = await transformer.transform(res);\n          }\n        } // Transform raw to COVID19 certificate\n\n\n        if (covid19) {\n          const transformer = new Covid19();\n\n          if (transformer.identified(res)) {\n            codeType = transformer.codeType();\n            res = await transformer.transform(res);\n          }\n        }\n\n        setBarcode(res);\n        setResultOpen(true);\n        setRawCode(rawCode);\n        setCodeType(codeType);\n        setMilliseconds(millis);\n        if (beepOn) beepNow();\n      }\n    };\n  };\n\n  const startScan = async () => {\n    initWorker();\n    canvasElement = document.getElementById(\"canvas\");\n    canvas = canvasElement.getContext(\"2d\", {\n      willReadFrequently: true\n    });\n    setBtnText(BTN_TXT.STOP);\n    setBarcode(null);\n    setResultOpen(false);\n    setTransformToggle(true);\n    setRawCode(null);\n    setCodeType(CODE_TYPE.RAW);\n\n    try {\n      video.srcObject = await navigator.mediaDevices.getUserMedia(CAPTURE_OPTIONS);\n      video.setAttribute(\"playsinline\", \"true\");\n      await video.play();\n      setScanning(true);\n      requestAnimationFrame(tick);\n    } catch (err) {\n      stopScan().then();\n      console.log(\"stopped by the user\");\n      alert(err);\n    }\n  };\n\n  const stopScan = async () => {\n    setScanning(false);\n    setBtnText(BTN_TXT.START);\n    await video.pause();\n\n    if (video.srcObject) {\n      video.srcObject.getVideoTracks().forEach(track => track.stop());\n      video.srcObject = null;\n    }\n  };\n\n  const tick = time => {\n    if (video.readyState === video.HAVE_ENOUGH_DATA) {\n      canvas.drawImage(video, sx, sy, sw, sh, dx, dy, dw, dh);\n      if (bwRef.current) monochromize();\n      if (crosshairRef.current) drawCrosshair();\n      if (scanning) requestAnimationFrame(tick);\n      if (decode) recogniseQRcode(time);\n    }\n\n    requestAnimationFrame(tick);\n  };\n\n  const monochromize = () => {\n    let imgd = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);\n    let pix = imgd.data;\n\n    for (let i = 0; i < pix.length; i += 4) {\n      let gray = pix[i] * 0.3 + pix[i + 1] * 0.59 + pix[i + 2] * 0.11;\n      pix[i] = gray;\n      pix[i + 1] = gray;\n      pix[i + 2] = gray;\n    }\n\n    canvas.putImageData(imgd, 0, 0);\n  };\n\n  const drawCrosshair = () => {\n    canvas.fillStyle = \"rgba(255,255,255,0.4)\";\n    const shape = new Path2D(crossHairSvg);\n    canvas.fill(shape);\n  };\n\n  const recogniseQRcode = time => {\n    if (time - oldTime > scanRate) {\n      oldTime = time;\n      let imageData;\n      if (crosshairRef.current === true) imageData = canvas.getImageData(x0, y0, crossHairWidth, crossHairHeight);else imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);\n      qrworker.postMessage({\n        width: imageData.width,\n        height: imageData.height\n      });\n      qrworker.postMessage(imageData, [imageData.data.buffer]);\n    }\n  };\n\n  const onBtnClickHandler = async e => {\n    e.preventDefault();\n    if (scanning) await stopScan();else await startScan();\n  };\n\n  const onCrossHairClickHandler = async e => {\n    e.preventDefault();\n    setCrosshairOn(!crosshairOn);\n  };\n\n  const onBWClickHandler = async e => {\n    e.preventDefault();\n    setBwOn(!bwOn);\n  };\n\n  const onBeepClickHandler = async e => {\n    e.preventDefault();\n    setBeepOn(!beepOn);\n  };\n\n  const startStyle = () => {\n    const style = {\n      width: 64,\n      textAlign: \"center\"\n    };\n    if (scanning) return {\n      backgroundColor: \"red\",\n      ...style\n    };else return {\n      backgroundColor: \"\",\n      ...style\n    };\n  };\n\n  const xHairStyle = () => {\n    if (crosshairOn) return {\n      backgroundColor: \"green\"\n    };else return {\n      backgroundColor: \"\"\n    };\n  };\n\n  const bwStyle = () => {\n    if (bwOn) return {\n      backgroundColor: \"green\"\n    };else return {\n      backgroundColor: \"\"\n    };\n  };\n\n  const beepStyle = () => {\n    if (beepOn) return {\n      backgroundColor: \"green\"\n    };else return {\n      backgroundColor: \"\"\n    };\n  };\n\n  const transformToggleStyle = () => {\n    if (transformToggle) return {\n      backgroundColor: \"green\",\n      padding: 12\n    };else return {\n      backgroundColor: \"\",\n      padding: 12\n    };\n  };\n\n  useEffect(() => {}, []);\n\n  const renderCanvas = () => {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      className: \"scanCanvas\",\n      width: CANVAS_SIZE.WIDTH,\n      height: CANVAS_SIZE.HEIGHT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanBtn\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        className: \"myHref\",\n        onClick: onBtnClickHandler,\n        style: startStyle(),\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        className: \"myHref\",\n        onClick: onCrossHairClickHandler,\n        style: xHairStyle(),\n        children: \"X-hair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        className: \"myHref\",\n        onClick: onBWClickHandler,\n        style: bwStyle(),\n        children: \"B/W\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        className: \"myHref\",\n        onClick: onBeepClickHandler,\n        style: beepStyle(),\n        children: \"Beep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderScan = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan\",\n      children: [renderCanvas(), renderButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderQrCodeResult = () => {\n    return barcode;\n  };\n\n  const onClickBackHandler = e => {\n    e.preventDefault();\n    setResultOpen(false);\n  };\n\n  const onTransformToggleHandler = e => {\n    e.preventDefault();\n    setTransformToggle(!transformToggle);\n    const rc = rawCode;\n    const bc = barcode;\n    setBarcode(rc);\n    setRawCode(bc);\n  };\n\n  const renderTransformToggle = () => {\n    if (codeType === CODE_TYPE.RAW) return \"\";\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"!#\",\n      className: \"myHref\",\n      style: transformToggleStyle(),\n      onClick: onTransformToggleHandler,\n      children: transformToggle === true ? codeType : \"RAW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onClickCopyToClipboard = async e => {\n    e.preventDefault();\n    await navigator.clipboard.writeText(barcode);\n    const btnId = document.getElementById(\"copyToClip\");\n    btnId.innerText = \"DONE\";\n    btnId.style.backgroundColor = \"green\";\n    setTimeout(() => {\n      btnId.innerText = \"COPY\";\n      btnId.style.backgroundColor = \"\";\n    }, 1000);\n  };\n\n  const renderCopyToClipboardBtn = () => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"!#\",\n      style: {\n        padding: 12\n      },\n      id: \"copyToClip\",\n      className: \"myHref\",\n      onClick: onClickCopyToClipboard,\n      children: \"COPY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderResult = () => {\n    if (resultOpen) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultModal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result\",\n          children: renderQrCodeResult()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: 10,\n            alignItems: \"right\"\n          },\n          children: [\"Decoding took \", milliseconds, \" ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 40\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"!#\",\n            style: {\n              padding: 12\n            },\n            className: \"myHref\",\n            onClick: onClickBackHandler,\n            children: \"BACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), renderTransformToggle(), renderCopyToClipboardBtn()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderScan(), renderResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scan, \"xWZxnwvFeLswmDr6QmNvY1IykEI=\");\n\n_c = Scan;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/src/components/scan.js"],"names":["React","useEffect","useState","beep","beepNow","WORKER_TYPE","CODE_TYPE","Upnqr","Covid19","BTN_TXT","START","STOP","CANVAS_SIZE","WIDTH","HEIGHT","CAPTURE_OPTIONS","audio","video","facingMode","sw","sh","dw","dh","dx","dy","sx","sy","crossHairSvg","crossHairWidth","crossHairHeight","x0","y0","Scan","decode","worker","WASM","scanRate","bw","crosshair","upnqr","covid19","btnText","setBtnText","scanning","setScanning","bwOn","setBwOn","bwRef","crosshairOn","setCrosshairOn","crosshairRef","resultOpen","setResultOpen","transformToggle","setTransformToggle","rawCode","setRawCode","codeType","setCodeType","beepOn","setBeepOn","document","createElement","barcode","setBarcode","milliseconds","setMilliseconds","qrworker","canvasElement","canvas","oldTime","onplaying","videoWidth","videoHeight","initWorker","Worker","onmessage","ev","data","terminate","result","stopScan","res","millis","ms","RAW","transformer","identified","transform","startScan","getElementById","getContext","willReadFrequently","srcObject","navigator","mediaDevices","getUserMedia","setAttribute","play","requestAnimationFrame","tick","err","then","console","log","alert","pause","getVideoTracks","forEach","track","stop","time","readyState","HAVE_ENOUGH_DATA","drawImage","current","monochromize","drawCrosshair","recogniseQRcode","imgd","getImageData","width","height","pix","i","length","gray","putImageData","fillStyle","shape","Path2D","fill","imageData","postMessage","buffer","onBtnClickHandler","e","preventDefault","onCrossHairClickHandler","onBWClickHandler","onBeepClickHandler","startStyle","style","textAlign","backgroundColor","xHairStyle","bwStyle","beepStyle","transformToggleStyle","padding","renderCanvas","renderButtons","renderScan","renderQrCodeResult","onClickBackHandler","onTransformToggleHandler","rc","bc","renderTransformToggle","onClickCopyToClipboard","clipboard","writeText","btnId","innerText","setTimeout","renderCopyToClipboardBtn","renderResult","paddingTop","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport useState from 'react-usestateref';\nimport {beep as beepNow, WORKER_TYPE} from \"../helpers\";\nimport {CODE_TYPE} from \"../transformers/base\";\nimport {Upnqr} from \"../transformers/upnqr\";\nimport {Covid19} from \"../transformers/covid19\";\nimport \"../css/scan.css\";\n\nconst BTN_TXT = {\n  START: \"START\",\n  STOP: \"STOP\"\n};\n\nconst CANVAS_SIZE = {\n  WIDTH: 320,\n  HEIGHT: 430\n};\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {facingMode: \"environment\"}\n}\n\nconst sw = CANVAS_SIZE.WIDTH;\nconst sh = CANVAS_SIZE.HEIGHT;\nconst dw = sw;\nconst dh = sh;\nconst dx = 0;\nconst dy = 0;\nlet sx = 0;\nlet sy = 0;\n\nconst crossHairSvg = \"M77.125 148.02567c0-3.5774 2.73862-6.27567 6.37076-6.27567H119V117H84.0192C66.50812 117 52 130.77595 52 148.02567V183h25.125v-34.97433zM237.37338 117H202v24.75h35.18494c3.63161 0 6.69006 2.69775 6.69006 6.27567V183H269v-34.97433C269 130.77595 254.88446 117 237.37338 117zM243.875 285.4587c0 3.5774-2.73863 6.27567-6.37076 6.27567H202V317h35.50424C255.01532 317 269 302.70842 269 285.4587V251h-25.125v34.4587zM83.49576 291.73438c-3.63213 0-6.37076-2.69776-6.37076-6.27568V251H52v34.4587C52 302.70842 66.50812 317 84.0192 317H119v-25.26563H83.49576z\";\nconst crossHairWidth = 217, crossHairHeight = 200, x0 = 53, y0 = 117;\n\nexport default function Scan({\n  beep = true,\n  decode = true,\n  worker = WORKER_TYPE.WASM,\n  scanRate = 250,\n  bw = false,\n  crosshair = true,\n  upnqr = false,\n  covid19 = false\n}) {\n\n  // Component state\n  const [btnText, setBtnText] = useState(BTN_TXT.START);\n  const [scanning, setScanning] = useState(false);\n\n  const [bwOn, setBwOn, bwRef] = useState(bw);\n  const [crosshairOn, setCrosshairOn, crosshairRef] = useState(crosshair);\n\n  const [resultOpen, setResultOpen] = useState(false);\n  const [transformToggle, setTransformToggle] = useState(true);\n  const [rawCode, setRawCode] = useState();\n  const [codeType, setCodeType] = useState();\n  const [beepOn, setBeepOn] = useState(beep);\n\n  const [video] = useState(document.createElement(\"video\"));\n  const [barcode, setBarcode] = useState();\n  const [milliseconds, setMilliseconds] = useState();\n\n  // Constants\n  let qrworker = null;\n  let canvasElement = null;\n  let canvas = null;\n  let oldTime = 0;\n\n  video.onplaying = () => {\n    sx = (video.videoWidth - CANVAS_SIZE.WIDTH) / 2;\n    sy = (video.videoHeight - CANVAS_SIZE.HEIGHT) / 2;\n  };\n\n  const initWorker = () => {\n    qrworker = new Worker(worker + \"Worker.js\");\n    qrworker.onmessage = async ev => {\n      if (ev.data != null) {\n        qrworker.terminate();\n        const result = ev.data;\n        await stopScan();\n\n        let res = result.data;\n        const millis = ev.data.ms;\n        const rawCode = res;\n        let codeType = CODE_TYPE.RAW;\n\n        // Transform raw to UPNQR\n        if (upnqr) {\n          const transformer = new Upnqr();\n          if (transformer.identified(res)) {\n            codeType = transformer.codeType();\n            res = await transformer.transform(res);\n          }\n        }\n\n        // Transform raw to COVID19 certificate\n        if (covid19) {\n          const transformer = new Covid19();\n          if (transformer.identified(res)) {\n            codeType = transformer.codeType();\n            res = await transformer.transform(res);\n          }\n        }\n\n        setBarcode(res);\n        setResultOpen(true);\n        setRawCode(rawCode);\n        setCodeType(codeType);\n        setMilliseconds(millis);\n        if (beepOn) beepNow();\n      }\n    };\n  };\n\n  const startScan = async () => {\n    initWorker();\n    canvasElement = document.getElementById(\"canvas\");\n    canvas = canvasElement.getContext(\"2d\", {willReadFrequently: true});\n\n    setBtnText(BTN_TXT.STOP);\n    setBarcode(null);\n    setResultOpen(false);\n    setTransformToggle(true);\n    setRawCode(null);\n    setCodeType(CODE_TYPE.RAW);\n\n    try {\n      video.srcObject = await navigator.mediaDevices.getUserMedia(CAPTURE_OPTIONS);\n      video.setAttribute(\"playsinline\", \"true\");\n      await video.play();\n      setScanning(true);\n\n      requestAnimationFrame(tick);\n    } catch (err) {\n      stopScan().then();\n      console.log(\"stopped by the user\");\n      alert(err);\n    }\n  };\n\n  const stopScan = async () => {\n    setScanning(false);\n    setBtnText(BTN_TXT.START);\n    await video.pause();\n    if (video.srcObject) {\n      video.srcObject.getVideoTracks().forEach(track => track.stop());\n      video.srcObject = null;\n    }\n  };\n\n  const tick = (time) => {\n    if (video.readyState === video.HAVE_ENOUGH_DATA) {\n      canvas.drawImage(video, sx, sy, sw, sh, dx, dy, dw, dh);\n\n      if (bwRef.current) monochromize();\n      if (crosshairRef.current) drawCrosshair();\n      if (scanning) requestAnimationFrame(tick);\n      if (decode) recogniseQRcode(time);\n    }\n    requestAnimationFrame(tick);\n  };\n\n  const monochromize = () => {\n    let imgd = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);\n    let pix = imgd.data;\n    for (let i = 0; i < pix.length; i += 4) {\n      let gray = pix[i] * 0.3 + pix[i + 1] * 0.59 + pix[i + 2] * 0.11;\n      pix[i] = gray;\n      pix[i + 1] = gray;\n      pix[i + 2] = gray;\n    }\n    canvas.putImageData(imgd, 0, 0);\n  };\n\n  const drawCrosshair = () => {\n    canvas.fillStyle = \"rgba(255,255,255,0.4)\";\n    const shape = new Path2D(crossHairSvg);\n    canvas.fill(shape);\n  };\n\n  const recogniseQRcode = (time) => {\n    if (time - oldTime > scanRate) {\n      oldTime = time;\n      let imageData;\n      if (crosshairRef.current === true)\n        imageData = canvas.getImageData(x0, y0, crossHairWidth, crossHairHeight);\n      else\n        imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);\n      qrworker.postMessage({width: imageData.width, height: imageData.height});\n      qrworker.postMessage(imageData, [imageData.data.buffer]);\n    }\n  };\n\n  const onBtnClickHandler = async (e) => {\n    e.preventDefault();\n    if (scanning) await stopScan(); else await startScan();\n  };\n\n  const onCrossHairClickHandler = async (e) => {\n    e.preventDefault();\n    setCrosshairOn(!crosshairOn);\n  };\n\n  const onBWClickHandler = async (e) => {\n    e.preventDefault();\n    setBwOn(!bwOn);\n  };\n\n  const onBeepClickHandler = async (e) => {\n    e.preventDefault();\n    setBeepOn(!beepOn);\n  };\n\n  const startStyle = () => {\n    const style = {width: 64, textAlign: \"center\"};\n    if (scanning) return {backgroundColor: \"red\", ...style};\n    else return {backgroundColor: \"\", ...style};\n  };\n\n  const xHairStyle = () => {\n    if (crosshairOn) return {backgroundColor: \"green\"};\n    else return {backgroundColor: \"\"};\n  };\n\n  const bwStyle = () => {\n    if (bwOn) return {backgroundColor: \"green\"};\n    else return {backgroundColor: \"\"};\n  };\n\n  const beepStyle = () => {\n    if (beepOn) return {backgroundColor: \"green\"};\n    else return {backgroundColor: \"\"};\n  };\n\n  const transformToggleStyle = () => {\n    if (transformToggle) return {backgroundColor: \"green\", padding: 12};\n    else return {backgroundColor: \"\", padding: 12};\n  }\n\n  useEffect(() => {}, []);\n\n  const renderCanvas = () => {\n    return <canvas id=\"canvas\" className=\"scanCanvas\" width={CANVAS_SIZE.WIDTH} height={CANVAS_SIZE.HEIGHT} />\n  };\n\n  const renderButtons = () => {\n    return <div className=\"scanBtn\">\n      <a href=\"!#\" className=\"myHref\" onClick={onBtnClickHandler} style={startStyle()}>{btnText}</a>\n      <a href=\"!#\" className=\"myHref\" onClick={onCrossHairClickHandler} style={xHairStyle()}>X-hair</a>\n      <a href=\"!#\" className=\"myHref\" onClick={onBWClickHandler} style={bwStyle()}>B/W</a>\n      <a href=\"!#\" className=\"myHref\" onClick={onBeepClickHandler} style={beepStyle()}>Beep</a>\n    </div>;\n  };\n\n  const renderScan = () => {\n    return (\n      <div className=\"scan\">\n        {renderCanvas()}\n        {renderButtons()}\n      </div>\n    );\n  };\n\n  const renderQrCodeResult = () => {\n    return barcode;\n  }\n\n  const onClickBackHandler = (e) => {\n    e.preventDefault();\n    setResultOpen(false);\n  };\n\n  const onTransformToggleHandler = (e) => {\n    e.preventDefault();\n    setTransformToggle(!transformToggle);\n    const rc = rawCode;\n    const bc = barcode;\n    setBarcode(rc);\n    setRawCode(bc);\n  };\n\n  const renderTransformToggle = () => {\n    if (codeType === CODE_TYPE.RAW) return \"\";\n    return (\n      <a href=\"!#\"\n         className=\"myHref\"\n         style={transformToggleStyle()}\n         onClick={onTransformToggleHandler}>\n        {transformToggle === true ? codeType : \"RAW\"}\n      </a>\n    );\n  };\n\n  const onClickCopyToClipboard = async (e) => {\n    e.preventDefault();\n    await navigator.clipboard.writeText(barcode);\n    const btnId = document.getElementById(\"copyToClip\");\n    btnId.innerText = \"DONE\";\n    btnId.style.backgroundColor = \"green\";\n    setTimeout(() => {\n      btnId.innerText = \"COPY\";\n      btnId.style.backgroundColor = \"\";\n    }, 1000);\n  }\n\n  const renderCopyToClipboardBtn = () => {\n    return <a href=\"!#\" style={{padding: 12}} id=\"copyToClip\" className=\"myHref\"\n              onClick={onClickCopyToClipboard}>COPY</a>\n  }\n\n  const renderResult = () => {\n    if (resultOpen) {\n      return (\n        <div className=\"resultModal\">\n          <div className=\"result\">\n            {renderQrCodeResult()}\n          </div>\n          <div style={{paddingTop: 10, alignItems: \"right\"}}>\n            Decoding took {milliseconds} ms\n          </div>\n          <div style={{marginTop: 40}}>\n            <a href=\"!#\" style={{padding: 12}} className=\"myHref\" onClick={onClickBackHandler}>BACK</a>\n            {renderTransformToggle()}\n            {renderCopyToClipboardBtn()}\n          </div>\n        </div>);\n    }\n  };\n\n  return (\n    <div>\n      {renderScan()}\n      {renderResult()}\n    </div>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}