{"ast":null,"code":"'use strict';\n/**\n * @enum {number}\n */\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n};\n/**\n * @enum {number}\n */\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36,\n  // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n  SET: 258\n};\n/**\n * @enum {number}\n */\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n};\n/**\n * @enum {number}\n */\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n};\nexports.SYMS = {\n  NULL: Symbol.for('github.com/hildjj/node-cbor/null'),\n  UNDEFINED: Symbol.for('github.com/hildjj/node-cbor/undef'),\n  PARENT: Symbol.for('github.com/hildjj/node-cbor/parent'),\n  BREAK: Symbol.for('github.com/hildjj/node-cbor/break'),\n  STREAM: Symbol.for('github.com/hildjj/node-cbor/stream')\n};\nexports.SHIFT32 = 0x100000000;\nexports.BI = {\n  MINUS_ONE: BigInt(-1),\n  NEG_MAX: BigInt(-1) - BigInt(Number.MAX_SAFE_INTEGER),\n  MAXINT32: BigInt('0xffffffff'),\n  MAXINT64: BigInt('0xffffffffffffffff'),\n  SHIFT32: BigInt(exports.SHIFT32)\n};","map":{"version":3,"sources":["C:/Users/ethan/Documents/stormhacks-2024/scanecipe/node_modules/cbor/lib/constants.js"],"names":["exports","MT","POS_INT","NEG_INT","BYTE_STRING","UTF8_STRING","ARRAY","MAP","TAG","SIMPLE_FLOAT","DATE_STRING","DATE_EPOCH","POS_BIGINT","NEG_BIGINT","DECIMAL_FRAC","BIGFLOAT","BASE64URL_EXPECTED","BASE64_EXPECTED","BASE16_EXPECTED","CBOR","URI","BASE64URL","BASE64","REGEXP","MIME","SET","NUMBYTES","ZERO","ONE","TWO","FOUR","EIGHT","INDEFINITE","SIMPLE","FALSE","TRUE","NULL","UNDEFINED","SYMS","Symbol","for","PARENT","BREAK","STREAM","SHIFT32","BI","MINUS_ONE","BigInt","NEG_MAX","Number","MAX_SAFE_INTEGER","MAXINT32","MAXINT64"],"mappings":"AAAA;AAEA;AACA;AACA;;AACAA,OAAO,CAACC,EAAR,GAAa;AACXC,EAAAA,OAAO,EAAE,CADE;AAEXC,EAAAA,OAAO,EAAE,CAFE;AAGXC,EAAAA,WAAW,EAAE,CAHF;AAIXC,EAAAA,WAAW,EAAE,CAJF;AAKXC,EAAAA,KAAK,EAAE,CALI;AAMXC,EAAAA,GAAG,EAAE,CANM;AAOXC,EAAAA,GAAG,EAAE,CAPM;AAQXC,EAAAA,YAAY,EAAE;AARH,CAAb;AAWA;AACA;AACA;;AACAT,OAAO,CAACQ,GAAR,GAAc;AACZE,EAAAA,WAAW,EAAE,CADD;AAEZC,EAAAA,UAAU,EAAE,CAFA;AAGZC,EAAAA,UAAU,EAAE,CAHA;AAIZC,EAAAA,UAAU,EAAE,CAJA;AAKZC,EAAAA,YAAY,EAAE,CALF;AAMZC,EAAAA,QAAQ,EAAE,CANE;AAOZC,EAAAA,kBAAkB,EAAE,EAPR;AAQZC,EAAAA,eAAe,EAAE,EARL;AASZC,EAAAA,eAAe,EAAE,EATL;AAUZC,EAAAA,IAAI,EAAE,EAVM;AAWZC,EAAAA,GAAG,EAAE,EAXO;AAYZC,EAAAA,SAAS,EAAE,EAZC;AAaZC,EAAAA,MAAM,EAAE,EAbI;AAcZC,EAAAA,MAAM,EAAE,EAdI;AAeZC,EAAAA,IAAI,EAAE,EAfM;AAgBZ;AACAC,EAAAA,GAAG,EAAE;AAjBO,CAAd;AAoBA;AACA;AACA;;AACAzB,OAAO,CAAC0B,QAAR,GAAmB;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,GAAG,EAAE,EAHY;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,KAAK,EAAE,EALU;AAMjBC,EAAAA,UAAU,EAAE;AANK,CAAnB;AASA;AACA;AACA;;AACAhC,OAAO,CAACiC,MAAR,GAAiB;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,IAAI,EAAE,EAFS;AAGfC,EAAAA,IAAI,EAAE,EAHS;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAjB;AAOArC,OAAO,CAACsC,IAAR,GAAe;AACbF,EAAAA,IAAI,EAAEG,MAAM,CAACC,GAAP,CAAW,kCAAX,CADO;AAEbH,EAAAA,SAAS,EAAEE,MAAM,CAACC,GAAP,CAAW,mCAAX,CAFE;AAGbC,EAAAA,MAAM,EAAEF,MAAM,CAACC,GAAP,CAAW,oCAAX,CAHK;AAIbE,EAAAA,KAAK,EAAEH,MAAM,CAACC,GAAP,CAAW,mCAAX,CAJM;AAKbG,EAAAA,MAAM,EAAEJ,MAAM,CAACC,GAAP,CAAW,oCAAX;AALK,CAAf;AAQAxC,OAAO,CAAC4C,OAAR,GAAkB,WAAlB;AAEA5C,OAAO,CAAC6C,EAAR,GAAa;AACXC,EAAAA,SAAS,EAAEC,MAAM,CAAC,CAAC,CAAF,CADN;AAEXC,EAAAA,OAAO,EAAED,MAAM,CAAC,CAAC,CAAF,CAAN,GAAaA,MAAM,CAACE,MAAM,CAACC,gBAAR,CAFjB;AAGXC,EAAAA,QAAQ,EAAEJ,MAAM,CAAC,YAAD,CAHL;AAIXK,EAAAA,QAAQ,EAAEL,MAAM,CAAC,oBAAD,CAJL;AAKXH,EAAAA,OAAO,EAAEG,MAAM,CAAC/C,OAAO,CAAC4C,OAAT;AALJ,CAAb","sourcesContent":["'use strict'\n\n/**\n * @enum {number}\n */\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7,\n}\n\n/**\n * @enum {number}\n */\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36,\n  // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n  SET: 258,\n}\n\n/**\n * @enum {number}\n */\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31,\n}\n\n/**\n * @enum {number}\n */\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23,\n}\n\nexports.SYMS = {\n  NULL: Symbol.for('github.com/hildjj/node-cbor/null'),\n  UNDEFINED: Symbol.for('github.com/hildjj/node-cbor/undef'),\n  PARENT: Symbol.for('github.com/hildjj/node-cbor/parent'),\n  BREAK: Symbol.for('github.com/hildjj/node-cbor/break'),\n  STREAM: Symbol.for('github.com/hildjj/node-cbor/stream'),\n}\n\nexports.SHIFT32 = 0x100000000\n\nexports.BI = {\n  MINUS_ONE: BigInt(-1),\n  NEG_MAX: BigInt(-1) - BigInt(Number.MAX_SAFE_INTEGER),\n  MAXINT32: BigInt('0xffffffff'),\n  MAXINT64: BigInt('0xffffffffffffffff'),\n  SHIFT32: BigInt(exports.SHIFT32),\n}\n\n"]},"metadata":{},"sourceType":"script"}