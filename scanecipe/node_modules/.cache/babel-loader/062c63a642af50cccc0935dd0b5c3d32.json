{"ast":null,"code":"'use strict';\n\nexports.Commented = require('./commented');\nexports.Diagnose = require('./diagnose');\nexports.Decoder = require('./decoder');\nexports.Encoder = require('./encoder');\nexports.Simple = require('./simple');\nexports.Tagged = require('./tagged');\nexports.Map = require('./map');\n\n/**\n * Convenience name for {@linkcode Commented.comment}.\n */\nexports.comment = exports.Commented.comment;\n\n/**\n * Convenience name for {@linkcode Decoder.decodeAll}.\n */\nexports.decodeAll = exports.Decoder.decodeAll;\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirst}.\n */\nexports.decodeFirst = exports.Decoder.decodeFirst;\n\n/**\n * Convenience name for {@linkcode Decoder.decodeAllSync}.\n */\nexports.decodeAllSync = exports.Decoder.decodeAllSync;\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirstSync}.\n */\nexports.decodeFirstSync = exports.Decoder.decodeFirstSync;\n\n/**\n * Convenience name for {@linkcode Diagnose.diagnose}.\n */\nexports.diagnose = exports.Diagnose.diagnose;\n\n/**\n * Convenience name for {@linkcode Encoder.encode}.\n */\nexports.encode = exports.Encoder.encode;\n\n/**\n * Convenience name for {@linkcode Encoder.encodeCanonical}.\n */\nexports.encodeCanonical = exports.Encoder.encodeCanonical;\n\n/**\n * Convenience name for {@linkcode Encoder.encodeOne}.\n */\nexports.encodeOne = exports.Encoder.encodeOne;\n\n/**\n * Convenience name for {@linkcode Encoder.encodeAsync}.\n */\nexports.encodeAsync = exports.Encoder.encodeAsync;\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirstSync}.\n */\nexports.decode = exports.Decoder.decodeFirstSync;\n\n/**\n * The codec information for\n * {@link https://github.com/Level/encoding-down encoding-down}, which is a\n * codec framework for leveldb.  CBOR is a particularly convenient format for\n * both keys and values, as it can deal with a lot of types that JSON can't\n * handle without losing type information.\n *\n * @example\n * const level = require('level')\n * const cbor = require('cbor')\n *\n * async function putget() {\n *   const db = level('./db', {\n *     keyEncoding: cbor.leveldb,\n *     valueEncoding: cbor.leveldb,\n *   })\n *\n *   await db.put({a: 1}, 9857298342094820394820394820398234092834n)\n *   const val = await db.get({a: 1})\n * }\n */\nexports.leveldb = {\n  decode: exports.Decoder.decodeFirstSync,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n};\n\n/**\n * Reset everything that we can predict a plugin might have altered in good\n * faith.  For now that includes the default set of tags that decoding and\n * encoding will use.\n */\nexports.reset = function reset() {\n  exports.Encoder.reset();\n  exports.Tagged.reset();\n};","map":{"version":3,"names":["exports","Commented","require","Diagnose","Decoder","Encoder","Simple","Tagged","Map","comment","decodeAll","decodeFirst","decodeAllSync","decodeFirstSync","diagnose","encode","encodeCanonical","encodeOne","encodeAsync","decode","leveldb","buffer","name","reset"],"sources":["/Users/jakechoi/Documents/StormhacksFall2024/stormhacks-2024/scanecipe/node_modules/cbor/lib/cbor.js"],"sourcesContent":["'use strict'\n\nexports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\nexports.Map = require('./map')\n\n/**\n * Convenience name for {@linkcode Commented.comment}.\n */\nexports.comment = exports.Commented.comment\n\n/**\n * Convenience name for {@linkcode Decoder.decodeAll}.\n */\nexports.decodeAll = exports.Decoder.decodeAll\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirst}.\n */\nexports.decodeFirst = exports.Decoder.decodeFirst\n\n/**\n * Convenience name for {@linkcode Decoder.decodeAllSync}.\n */\nexports.decodeAllSync = exports.Decoder.decodeAllSync\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirstSync}.\n */\nexports.decodeFirstSync = exports.Decoder.decodeFirstSync\n\n/**\n * Convenience name for {@linkcode Diagnose.diagnose}.\n */\nexports.diagnose = exports.Diagnose.diagnose\n\n/**\n * Convenience name for {@linkcode Encoder.encode}.\n */\nexports.encode = exports.Encoder.encode\n\n/**\n * Convenience name for {@linkcode Encoder.encodeCanonical}.\n */\nexports.encodeCanonical = exports.Encoder.encodeCanonical\n\n/**\n * Convenience name for {@linkcode Encoder.encodeOne}.\n */\nexports.encodeOne = exports.Encoder.encodeOne\n\n/**\n * Convenience name for {@linkcode Encoder.encodeAsync}.\n */\nexports.encodeAsync = exports.Encoder.encodeAsync\n\n/**\n * Convenience name for {@linkcode Decoder.decodeFirstSync}.\n */\nexports.decode = exports.Decoder.decodeFirstSync\n\n/**\n * The codec information for\n * {@link https://github.com/Level/encoding-down encoding-down}, which is a\n * codec framework for leveldb.  CBOR is a particularly convenient format for\n * both keys and values, as it can deal with a lot of types that JSON can't\n * handle without losing type information.\n *\n * @example\n * const level = require('level')\n * const cbor = require('cbor')\n *\n * async function putget() {\n *   const db = level('./db', {\n *     keyEncoding: cbor.leveldb,\n *     valueEncoding: cbor.leveldb,\n *   })\n *\n *   await db.put({a: 1}, 9857298342094820394820394820398234092834n)\n *   const val = await db.get({a: 1})\n * }\n */\nexports.leveldb = {\n  decode: exports.Decoder.decodeFirstSync,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor',\n}\n\n/**\n * Reset everything that we can predict a plugin might have altered in good\n * faith.  For now that includes the default set of tags that decoding and\n * encoding will use.\n */\nexports.reset = function reset() {\n  exports.Encoder.reset()\n  exports.Tagged.reset()\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1CF,OAAO,CAACG,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACxCF,OAAO,CAACI,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AACtCF,OAAO,CAACK,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;AACtCF,OAAO,CAACM,MAAM,GAAGJ,OAAO,CAAC,UAAU,CAAC;AACpCF,OAAO,CAACO,MAAM,GAAGL,OAAO,CAAC,UAAU,CAAC;AACpCF,OAAO,CAACQ,GAAG,GAAGN,OAAO,CAAC,OAAO,CAAC;;AAE9B;AACA;AACA;AACAF,OAAO,CAACS,OAAO,GAAGT,OAAO,CAACC,SAAS,CAACQ,OAAO;;AAE3C;AACA;AACA;AACAT,OAAO,CAACU,SAAS,GAAGV,OAAO,CAACI,OAAO,CAACM,SAAS;;AAE7C;AACA;AACA;AACAV,OAAO,CAACW,WAAW,GAAGX,OAAO,CAACI,OAAO,CAACO,WAAW;;AAEjD;AACA;AACA;AACAX,OAAO,CAACY,aAAa,GAAGZ,OAAO,CAACI,OAAO,CAACQ,aAAa;;AAErD;AACA;AACA;AACAZ,OAAO,CAACa,eAAe,GAAGb,OAAO,CAACI,OAAO,CAACS,eAAe;;AAEzD;AACA;AACA;AACAb,OAAO,CAACc,QAAQ,GAAGd,OAAO,CAACG,QAAQ,CAACW,QAAQ;;AAE5C;AACA;AACA;AACAd,OAAO,CAACe,MAAM,GAAGf,OAAO,CAACK,OAAO,CAACU,MAAM;;AAEvC;AACA;AACA;AACAf,OAAO,CAACgB,eAAe,GAAGhB,OAAO,CAACK,OAAO,CAACW,eAAe;;AAEzD;AACA;AACA;AACAhB,OAAO,CAACiB,SAAS,GAAGjB,OAAO,CAACK,OAAO,CAACY,SAAS;;AAE7C;AACA;AACA;AACAjB,OAAO,CAACkB,WAAW,GAAGlB,OAAO,CAACK,OAAO,CAACa,WAAW;;AAEjD;AACA;AACA;AACAlB,OAAO,CAACmB,MAAM,GAAGnB,OAAO,CAACI,OAAO,CAACS,eAAe;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,OAAO,CAACoB,OAAO,GAAG;EAChBD,MAAM,EAAEnB,OAAO,CAACI,OAAO,CAACS,eAAe;EACvCE,MAAM,EAAEf,OAAO,CAACK,OAAO,CAACU,MAAM;EAC9BM,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAtB,OAAO,CAACuB,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;EAC/BvB,OAAO,CAACK,OAAO,CAACkB,KAAK,CAAC,CAAC;EACvBvB,OAAO,CAACO,MAAM,CAACgB,KAAK,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}